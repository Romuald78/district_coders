# Generated by Django 4.0.4 on 2022-06-07 14:34

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserDC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('icon', models.CharField(max_length=128)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('description', models.TextField()),
                ('gen_file', models.CharField(max_length=128, unique=True)),
                ('icon', models.TextField()),
                ('gen_type', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Exo2Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField(default=0)),
                ('score', models.IntegerField(default=0)),
                ('exercise_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='district.exercise')),
            ],
        ),
        migrations.CreateModel(
            name='ExoTest2Lang',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nb_test_try', models.IntegerField(verbose_name=0)),
                ('nb_test_pass', models.IntegerField(verbose_name=0)),
                ('nb_train_try', models.IntegerField(verbose_name=0)),
                ('nb_train_pass', models.IntegerField(verbose_name=0)),
                ('exo2test_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='district.exo2test')),
            ],
        ),
        migrations.CreateModel(
            name='GroupDC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('icon', models.CharField(max_length=128)),
                ('register_key', models.CharField(max_length=128)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
                ('icon', models.TextField()),
                ('default_code', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TestDC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('description', models.TextField()),
                ('icon', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nb_test_try', models.IntegerField(default=0)),
                ('solve_time', models.DurationField(default=datetime.timedelta(0))),
                ('solve_code', models.TextField()),
                ('exo_test2lang_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='district.exotest2lang')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='KeyWord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=64)),
                ('exercices', models.ManyToManyField(to='district.exercise')),
            ],
        ),
        migrations.AddField(
            model_name='exotest2lang',
            name='lang_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='district.language'),
        ),
        migrations.AddField(
            model_name='exo2test',
            name='test_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='district.testdc'),
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('training_time', models.DateTimeField()),
                ('result_json', models.TextField()),
                ('groups', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='district.groupdc')),
            ],
        ),
        migrations.AddField(
            model_name='userdc',
            name='groups',
            field=models.ManyToManyField(to='district.groupdc'),
        ),
        migrations.AddField(
            model_name='userdc',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
