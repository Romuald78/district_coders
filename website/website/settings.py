"""
Django settings for website project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path

from config.secure import email_cnf

try:
    from config.secure.database_cnf_local import CONFIG_DB
except ModuleNotFoundError:
    from config.secure.database_cnf import CONFIG_DB

from config.secure.django_secret_key import django_secret_key
from config.constants.medias_cnf import medias_absolute_path, medias_url_root

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = django_secret_key

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition
INSTALLED_APPS = [
    # our own applications
    'district',
    # Documentation Generation
    'django.contrib.admindocs',
    # Default Django Installed apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',          # SESSIONS
    'django.contrib.messages',
    'django.contrib.staticfiles',       # STATIC FILES (images, css, ...)
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware', # SESSIONS
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'website.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # to be able to use MEDIA_URL in the templates
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'website.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
DATABASES = {
    'default': CONFIG_DB
}



AUTH_USER_MODEL = "district.UserDC"

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/
# This is the sub-folder of the application where to
# store static files
STATIC_URL  = '/static/'

# MEDIA FILEs and URLs
# MEDIA_ROOT (directory of media files)
# MEDIA_URL (url root for media files)
MEDIA_ROOT = os.path.join(BASE_DIR,"medias")
MEDIA_URL = medias_url_root
#print(BASE_DIR)

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# SESSIONS
# This setting allows to update the session database for every request
# if not enabled, this is up to the user to update the
# sub variables of the request.session dictionary
# by using : request.session.modified = True
# DO we have to use it ? what impact in terms of performance ?
###SESSION_SAVE_EVERY_REQUEST = True
# SESSIONS
# python3 manage.py clearsessions command MUST be used on a regular (daily) basis
# in order to clean the session table
SESSION_EXPIRE_AFTER_LAST_ACTIVITY = True
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_EXPIRE_SECONDS = 1000*60              # in seconds
SESSION_COOKIE_AGE = 1000*60                  # in seconds

# AUTHENTICATION
LOGIN_URL = "/accounts/login/"
LOGOUT_URL = "/accounts/logout/"
LOGOUT_REDIRECT_URL = "/"

# DISTRICT CODER SETTINGS
DEFAULT_GROUP_KEY = "everyone"

# EMAIL BACKEND
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_HOST = email_cnf.EMAIL_HOST
EMAIL_PORT = email_cnf.EMAIL_PORT
EMAIL_HOST_USER = email_cnf.EMAIL_HOST_USER
EMAIL_HOST_PASSWORD = email_cnf.EMAIL_HOST_PASSWORD
EMAIL_USE_TLS = email_cnf.EMAIL_USE_TLS
EMAIL_USE_SSL = email_cnf.EMAIL_USE_SSL
# EMAIL_TIMEOUT = email_cnf.EMAIL_TIMEOUT
# EMAIL_SSL_KEYFILE = email_cnf.EMAIL_SSL_KEYFILE
# EMAIL_SSL_CERTFILE = email_cnf.EMAIL_SSL_CERTFILE

# RESET TIMEOUT (email or password) (in second)
PASSWORD_RESET_TIMEOUT = 5 * 60
